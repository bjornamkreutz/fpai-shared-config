<?xml version="1.0" encoding="UTF-8"?>
<!-- The following properties should be set: - ant.project.name: Should always 
	be set to something sensible (will be used in the directories) - targetversion: 
	The current version of the build, e.g. 13.10 - project.title: The title that 
	will be shown in the javadoc. -->

<project name="fpai.template" default="build">
	<dirname property="projectdir" file="${ant.file}" />
	<dirname property="workspacedir" file="${projectdir}" />

	<fileset id="build" dir="${workspacedir}">
		<include name="*/build.xml" />
		<exclude name="cnf*/*" />
	</fileset>

	<fileset id="release" dir="${workspacedir}">
		<include name="*/build.xml" />
		<exclude name="cnf*/*" />
		<exclude name="*.test/*" />
	</fileset>

	<target name="init" unless="init.done">
		<!-- Validate vars -->
		<fail unless="targetversion"
			message="Missing the 'targetversion' parameter, should the target be called directly?" />
		<fail unless="project.title"
			message="Missing the 'project.title' parameter, should the target be called directly?" />

		<!-- Import ant-contrib -->
		<taskdef resource="net/sf/antcontrib/antcontrib.properties">
			<classpath>
				<pathelement location="${workspacedir}/cnf.shared/lib/ant-contrib.jar" />
			</classpath>
		</taskdef>

		<!-- Figure out git branch -->
		<property environment="env" />
		<propertyregex property="gitbranchstripped" input="${env.GIT_BRANCH}"
			regexp=".*/(.*)" select="\1" casesensitive="true" />
		<condition property="gitbranch" value="${gitbranchstripped}"
			else="unknownbranch">
			<isset property="env.GIT_BRANCH" />
		</condition>

		<!-- Set releasedir -->
		<condition property="releasedir" value="C:\temp\builds">
			<os family="windows" />
		</condition>
		<condition property="releasedir" value="/var/www/html/builds">
			<os family="unix" />
		</condition>
		<fail unless="releasedir">No release directory can be configured for this OS!
		</fail>

		<property name="baseDir"
			value="${releasedir}/${ant.project.name}/${gitbranch}" />

		<taskdef resource="nl/tno/bnd/repodownloader/ant/taskdef.properties"
			classpath="${workspacedir}/cnf.shared/tools/repo-downloader.jar" />
		<tstamp />

		<available property="deployment.present"
			file="${workspacedir}/cnf/deployment/config.properties" />

		<condition property="version" value="${targetversion}-LOCAL">
			<not>
				<isset property="version" />
			</not>
		</condition>

		<property name="init.done" value="true" />
	</target>

	<target name="echo" depends="init">
		<subant target="echo">
			<fileset refId="build" />
		</subant>
	</target>

	<target name="build" depends="init" unless="build.done">
		<subant target="build">
			<fileset refId="build" />
		</subant>
		<property name="build.done" value="true" />
	</target>

	<target name="release" depends="build" unless="release.done">
		<subant target="release">
			<fileset refId="release" />
		</subant>
		<property name="release.done" value="true" />
	</target>

	<target name="coverage-report" depends="build">
		<subant target="coverage-report">
			<fileset refId="build" />
		</subant>
	</target>

	<target name="test" depends="build">
		<subant target="test">
			<fileset dir="..">
				<include name="*.test/build.xml" />
			</fileset>
		</subant>
	</target>

	<target name="clean" depends="init">
		<delete dir="${workspacedir}/cnf/releae" />
		<delete dir="${workspacedir}/cnf/felix" />
		<mkdir dir="${workspacedir}/cnf/release" />
		<subant target="clean">
			<fileset refId="build" />
		</subant>
	</target>

	<target name="checkstyle" depends="build">
		<subant target="checkstyle">
			<fileset refId="build" />
		</subant>
	</target>

	<target name="publishrelease" depends="release">
		<delete dir="${builddir}/repo" />
		<mkdir dir="${builddir}/repo" />
		<copy todir="${builddir}/repo">
			<fileset dir="release" />
		</copy>

		<zip basedir="${workspacedir}"
			destfile="${builddir}/${ant.project.name}-sources-${version}.zip">
			<include name="*/src/**" />
			<include name="*/test/**" />
			<include name="*/res/**" />
			<include name="*/*.bnd" />
			<include name="*/build*.xml" />
			<include name="cnf*/**" />

			<exclude name="cnf*/bnd/**" />
			<exclude name="cnf*/cache/**" />
			<exclude name="cnf*/felix/**" />
			<exclude name="cnf*/lib/**" />
			<exclude name="cnf*/tools/**" />
			<exclude name="cnf*/release/**" />
		</zip>

		<zip basedir="release"
			destfile="${builddir}/${ant.project.name}-bundles-${version}.zip">
			<include name="**" />
		</zip>
	</target>

	<target name="publishjavadoc" depends="release">
		<fileset dir=".." id="javadoc_files">
			<include name="*.api*/**/*.java" />
			<exclude name="*.test/*" />
			<exclude name="**/*Test.java" />
		</fileset>
		<pathconvert refid="javadoc_files" property="fileset.notempty"
			setonempty="false" />

		<if>
			<isset property="fileset.notempty" />
			<then>
				<delete dir="${builddir}/javadoc" />
				<mkdir dir="${builddir}/javadoc" />
				<javadoc encoding="UTF-8" destdir="${builddir}/javadoc"
					windowtitle="${project.title}">
					<classpath location="${workspacedir}/cnf.shared/bnd/biz.aQute.bnd-2.4.0.jar" />
					<fileset refid="javadoc_files" />
				</javadoc>
			</then>
			<else>
				<echo message="No API classes found, skipping javadoc" />
			</else>
		</if>
	</target>

	<target name="deployment-extras">
	</target>

	<target name="deployment" depends="release" if="deployment.present">
		<condition property="repositories.skip"
			value=".*test.*|flexiblepower.runtime.simulation.*">
			<not>
				<isset property="repositories.skip" />
			</not>
		</condition>

		<property name="felix" value="${workspacedir}/cnf/felix" />

		<mkdir dir="${felix}/etc" />
		<mkdir dir="${felix}/base_bundles" />
		<delete dir="${felix}/fpai_bundles" />
		<mkdir dir="${felix}/fpai_bundles" />

		<get dest="${felix}/org.apache.felix.main.jar"
			src="http://apache.proserve.nl/felix/org.apache.felix.main-4.4.1.jar" />
		<repodownload bndFile="${workspacedir}/cnf/ext/repositories.bnd"
			skip="${repositories.skip}" outDir="${felix}/fpai_bundles"
			full="false" />
		<antcall target="deployment-extras" />

		<copy todir="${felix}/fpai_bundles" flatten="true">
			<fileset dir="${felix}/../release/">
				<include name="*/*.jar" />
			</fileset>
		</copy>

		<!-- copy the configuration -->
		<copy todir="${felix}/etc">
			<fileset dir="${workspacedir}/cnf/deployment" />
		</copy>

		<echo file="${felix}/run.bat">
			@echo off
			title ${project.title}
			echo ${project.title}
			echo Running from %CD%

			start "${project.title}" java ^
			-Djava.security.policy=etc/all.policy ^
			-Dfelix.config.properties=file:etc/config.properties ^
			-Dfelix.cm.dir="%CD%\config" ^
			-Dlogback.configurationFile=etc/logback.xml ^
			-jar
			org.apache.felix.main.jar
		</echo>
		<echo file="${felix}/run.sh">
			#!/bin/bash
			echo Running from `pwd`

			java \
			-Djava.security.policy=etc/all.policy \
			-Dfelix.config.properties=file:etc/config.properties \
			-Dfelix.cm.dir="`pwd`/config" \
			-Dlogback.configurationFile=etc/logback.xml \
			-jar
			org.apache.felix.main.jar
		</echo>
		<chmod perm="0755" file="${felix}/run.sh" />

		<zip basedir="${felix}"
			destfile="${builddir}/${ant.project.name}-felix-runtime-${version}.zip">
			<include name="**" />
		</zip>
	</target>

	<target name="workspace" depends="init">
		<!-- Make copy of workspace with relevant files -->
		<tempfile property="temp.dir" destDir="${java.io.tmpdir}"
			prefix="build" />
		<mkdir dir="${temp.dir}" />
		<copy todir="${temp.dir}">
			<fileset dir="${workspacedir}">
				<exclude name="cnf.shared/**" />
				<exclude name="cnf/cache/**" />
				<exclude name="cnf/release/**" />
				<exclude name="*/bin/**" />
				<exclude name="*/bin_test/**" />
				<exclude name="*/generated/**" />
				<exclude name="**.git**" />
				<exclude name="**coverage.xml" />
				<exclude name=".metadata/**" />
			</fileset>
		</copy>

		<!-- Make repositories local -->
		<repodownload bndFile="${temp.dir}/cnf/ext/repositories.bnd"
			changeBndFile="true" outDir="${temp.dir}/cnf/repos" full="true" />
		<!-- Move bnd files to -->
		<mkdir dir="${temp.dir}/cnf/bnd" />
		<copy todir="${temp.dir}/cnf/bnd">
			<fileset dir="${workspacedir}/cnf.shared/bnd" />
		</copy>
		<replace file="${temp.dir}/cnf/ext/repositories.bnd" token="cnf.shared"
			value="cnf" />
		<copy file="${workspacedir}/cnf.shared/LICENSE.txt" todir="${temp.dir}/cnf" />
		<replace file="${temp.dir}/cnf/build.bnd" token="cnf.shared"
			value="cnf" />

		<zip basedir="${temp.dir}"
			destfile="${builddir}/${ant.project.name}-eclipse-workspace-${version}.zip">
		</zip>
		<!-- undo changes -->
		<delete dir="${temp.dir}" />
	</target>


	<target name="distribute" depends="init">
		<delete dir="${workspacedir}/cnf/release" />
		<mkdir dir="${workspacedir}/cnf/release" />
		<delete dir="${workspacedir}/cnf/cache" />
		<mkdir dir="${workspacedir}/cnf/cache" />

		<subant target="clean">
			<fileset refId="build" />
		</subant>
		<subant target="distribute">
			<fileset refId="build" />
		</subant>
		<property name="build.done" value="true" />
		<property name="release.done" value="true" />

		<subant target="test">
			<fileset dir="${workspacedir}">
				<include name="*.test/build.xml" />
			</fileset>
		</subant>

		<antcall target="publishrelease" />
		<antcall target="publishjavadoc" />
		<antcall target="workspace" />
		<antcall target="deployment" />
	</target>



	<target name="snapshot" depends="init">
		<tstamp />
		<property name="version" value="${targetversion}-${DSTAMP}" />
		<property name="builddir"
			value="${releasedir}/${ant.project.name}/snapshots/${gitbranch}/${targetversion}-${DSTAMP}" />
		<antcall target="distribute" />
		<symlink link="${releasedir}/${ant.project.name}/snapshots/${gitbranch}/${targetversion}-LATEST-SNAPSHOT" resource="${builddir}" overwrite="true" failonerror="false"/>
	</target>

	<target name="do-release" depends="init">
		<property name="version" value="${targetversion}" />
		<property name="builddir"
			value="${releasedir}/${ant.project.name}/releases/${targetversion}" />
		<antcall target="distribute" />
	</target>
</project>

